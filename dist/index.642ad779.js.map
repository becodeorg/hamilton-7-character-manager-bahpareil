{"mappings":"AAAA,IAAI,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,AAAC;AACzC,IAAI,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,AAAC;AAC1C,eAAe,QAAQ,GAAG;IACtB,IAAI;QACF,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,kDAAkD,CAAC,AAAC;QACrF,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,KAAI,IAAI,IAAI,QAAQ,CAAC,IAAI,CAAE;YACzB,IAAI,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,AAAC;YACzC,IAAI,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,AAAC;YAC1C,KAAK,CAAC,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;YACtC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YACxB,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;SACjC;KAEF,CAAC,OAAO,KAAK,EAAE;QACd,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;KACtB;CACF","sources":["ressource/js/script.js"],"sourcesContent":["let card = document.createElement(\"div\");\nlet image = document.createElement(\"img\");\nasync function getChara() {\n    try {\n      const response = await axios.get(\"https://character-database.becode.xyz/characters\");\n      console.log(response);\n      for(elem of response.data) {\n        let card = document.createElement(\"div\");\n        let image = document.createElement(\"img\");\n        image.setAttribute(\"src\", elem.image);\n        card.appendChild(image);\n        document.body.appendChild(card);\n      }\n\n    } catch (error) {\n      console.error(error);\n    }\n  }"],"names":[],"version":3,"file":"index.642ad779.js.map","sourceRoot":"/__parcel_source_root/"}